rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Diary entries - users can only access their own entries
    match /diaryEntries/{entryId} {
      allow read, write, delete: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // User profiles - users can only access their own profile
    match /userProfiles/{profileId} {
      allow read, write: if isOwner(profileId);
    }
    
    // Photos - users can only access their own photos
    match /diary-photos/{userId}/{entryId}/{photoId} {
      allow read, write, delete: if isOwner(userId);
    }
    
    // Test collection (for connection testing)
    match /test/{document} {
      allow read, write: if isAuthenticated();
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}